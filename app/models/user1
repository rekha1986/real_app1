# == Schema Information
#
# Table name: users
#
#  id         :integer          not null, primary key
#  name       :string(255)
#  email      :string(255)
#  created_at :datetime         not null
#  updated_at :datetime         not null
#

class User < ActiveRecord::Base
  attr_accessible :email, :name, :password, :password_confirmation

 has_secure_password

has_many :authentications

has_many :microposts, dependent: :destroy
before_save { |user| user.email = email.downcase }
before_save :create_remember_token
validates :name, presence: true, length: { maximum: 50 }
VALID_EMAIL_REGEX = /\A[\w+\.]+@[a-z\d\-.]+\.[a-z]+\z/i
validates :email, presence: true, format: { with: VALID_EMAIL_REGEX },                   uniqueness: {case_sensitive: false}

validates :password, presence: true, length: { minimum: 6}
validates :password_confirmation, presence: true


private

    def create_remember_token
      self.remember_token = SecureRandom.urlsafe_base64
    end

def feed

Micropost.where("user_id = ?", id)
end



end


class Authentication < ActiveRecord::Base
  belongs_to :user
  validates_presence_of :user_id, :uid, :provider
  validates_uniqueness_of :uid, :scope => :provider
end


def self.create_from_hash!(hash)
  create(:name => hash['user_info']['name'])
end
